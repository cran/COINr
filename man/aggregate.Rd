% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coin_aggregate.R
\name{aggregate}
\alias{aggregate}
\title{Aggregate indicators}
\usage{
aggregate(
  COIN,
  agtype = "arith_mean",
  agweights = NULL,
  dset = NULL,
  agtype_bylevel = NULL,
  agfunc = NULL,
  out2 = NULL
)
}
\arguments{
\item{COIN}{COIN object}

\item{agtype}{The type of aggregation method.}

\item{agweights}{The weights to use in the aggregation. This can either be:
\code{NULL}, in which case it will use the weights that were attached to \code{IndMeta} and \code{AggMeta} in \code{\link[=assemble]{assemble()}} (if they exist), or
A character string which corresponds to a named list of weights stored in \code{.$Parameters$Weights}. You can either add these manually or through \code{\link[=rew8r]{rew8r()}}.
E.g. entering \code{agweights = "Original"} will use the original weights read in on assembly. This is equivalent to \code{agweights = NULL}.
Or, a data frame of weights to use in the aggregation.}

\item{dset}{Which data set (contained in COIN object) to use}

\item{agtype_bylevel}{A character vector with aggregation types for each level}

\item{agfunc}{A custom function to use for aggregation if \code{agtype = "custom"}, of the type \eqn{y = f(x,w)},
where \eqn{y} is a scalar aggregated value and \eqn{x} and \eqn{w} are vectors of indicator values and weights respectively.
Ensure that \code{NA}s are handled (e.g. set \code{na.rm = T}) if your data has missing values.}

\item{out2}{Where to output the results. If \code{"COIN"} (default for COIN input), appends to updated COIN,
otherwise if \code{"df"} outputs to data frame.}
}
\value{
An updated COIN containing the new aggregated data set at \code{.$Data$Aggregated}.
}
\description{
Takes indicator data and a specified structure and hierarchically aggregates according to the structure
specified in \code{IndMeta}. Uses a variety of aggregation methods as specified by \code{agtype}, which can be different for
each level of aggregation (see \code{agtype_by_level}).
}
\examples{
# assemble a COIN first
ASEM <- assemble(IndData = ASEMIndData, IndMeta = ASEMIndMeta, AggMeta = ASEMAggMeta)
# normalise the data
ASEM <- normalise(ASEM, dset = "Raw")
# aggregate the data
ASEM <- COINr::aggregate(ASEM, agtype="arith_mean", dset = "Normalised")
# check aggregated data set exists
stopifnot(!is.null(ASEM$Data$Aggregated))

}
